<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>前端emoji表情字符串处理</title>
      <link href="/2018/06/06/emoji-string/"/>
      <url>/2018/06/06/emoji-string/</url>
      <content type="html"><![CDATA[<p>emoji表情存储需要数据库存储字段的编码方式为utf8mb4，且该编码方式需数据库为 5.5.3 及以上版本。而且发现设置了utf8mb4编码后，还是会有部分emoji表情存储不了，所以改用前端转码后再存入数据库，读取的时候再解码：<br><a id="more"></a><br>转码：<br><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">utf16toEntities</span><span class="params">(str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> patt=/[\ud800-\udbff][\udc00-\udfff]/g; <span class="comment">// 检测utf16字符正则</span></span><br><span class="line">        str = str.replace(patt, <span class="function"><span class="keyword">function</span><span class="params">(char)</span></span>&#123;</span><br><span class="line">                <span class="keyword">var</span> H, L, code;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">char</span>.length===<span class="number">2</span>) &#123;</span><br><span class="line">                    H = <span class="keyword">char</span>.charCodeAt(<span class="number">0</span>); <span class="comment">// 取出高位</span></span><br><span class="line">                    L = <span class="keyword">char</span>.charCodeAt(<span class="number">1</span>); <span class="comment">// 取出低位</span></span><br><span class="line">                    code = (H - <span class="number">0xD800</span>) * <span class="number">0x400</span> + <span class="number">0x10000</span> + L - <span class="number">0xDC00</span>; <span class="comment">// 转换算法</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="string">"&amp;#"</span> + code + <span class="string">";"</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">char</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>解码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uncodeUtf16</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/\&amp;#.*?;/g</span>;</span><br><span class="line">        <span class="keyword">var</span> result = str.replace(reg,<span class="function"><span class="keyword">function</span>(<span class="params">char</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> H,L,code;</span><br><span class="line">            <span class="keyword">if</span>(char.length == <span class="number">9</span> )&#123;</span><br><span class="line">                code = <span class="built_in">parseInt</span>(char.match(<span class="regexp">/[0-9]+/g</span>));</span><br><span class="line">                H = <span class="built_in">Math</span>.floor((code<span class="number">-0x10000</span>) / <span class="number">0x400</span>)+<span class="number">0xD800</span>;</span><br><span class="line">                L = (code - <span class="number">0x10000</span>) % <span class="number">0x400</span> + <span class="number">0xDC00</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="string">"%u"</span>+H.toString(<span class="number">16</span>)+<span class="string">"%u"</span>+L.toString(<span class="number">16</span>));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> char;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>参考：<br><a href="https://blog.csdn.net/binjly/article/details/47321043" target="_blank" rel="noopener">移动前端手机输入法自带emoji表情字符处理</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IntersectionObserver使用</title>
      <link href="/2018/05/26/IntersectionObserver/"/>
      <url>/2018/05/26/IntersectionObserver/</url>
      <content type="html"><![CDATA[<p>IntersectionObserver用来监听一个目标元素是否出现在web页面的可视区域。<br><a id="more"></a><br>传统方式监听一个元素是否出现在可视区，可以监听scroll事件，计算目标元素距离顶部的距离减去页面滑出的距离；如果大于0且小于窗口的高度则表明是可见的。<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span>&lt; $(<span class="string">"targetDom"</span>).offset().top - $(document).scrollTop() &lt; $(<span class="keyword">window</span>).height()</span><br></pre></td></tr></table></figure></p><p>但是此方法需监听scroll事件，对性能要求高。</p><h5 id="IntersectionObserver-API，可以自动”观察”元素是否可见，IntersectionObserver是浏览器原生提供的一个构造函数，第一个参数元素可见性发生变化的回调函数，第二个是配置参数（可选）"><a href="#IntersectionObserver-API，可以自动”观察”元素是否可见，IntersectionObserver是浏览器原生提供的一个构造函数，第一个参数元素可见性发生变化的回调函数，第二个是配置参数（可选）" class="headerlink" title="IntersectionObserver API，可以自动”观察”元素是否可见，IntersectionObserver是浏览器原生提供的一个构造函数，第一个参数元素可见性发生变化的回调函数，第二个是配置参数（可选）"></a>IntersectionObserver API，可以自动”观察”元素是否可见，IntersectionObserver是浏览器原生提供的一个构造函数，第一个参数元素可见性发生变化的回调函数，第二个是配置参数（可选）</h5><figure class="highlight pony"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 创建一个观察实例</span><br><span class="line"><span class="keyword">var</span> io = <span class="function"><span class="keyword">new</span> <span class="title">IntersectionObserver</span>(callback, option);</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 开始观察</span></span></span><br><span class="line"><span class="function"><span class="title">io</span>.<span class="title">observe</span>(document.getElementById('example'));</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 停止观察</span></span></span><br><span class="line"><span class="function"><span class="title">io</span>.<span class="title">unobserve</span>(element);</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 关闭观察器</span></span></span><br><span class="line"><span class="function"><span class="title">io</span>.<span class="title">disconnect</span>();</span></span><br></pre></td></tr></table></figure><h5 id="callback"><a href="#callback" class="headerlink" title="callback"></a>callback</h5><p>callback会在元素刚开始进入视线和完全离开视线触发：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> io = <span class="keyword">new</span> IntersectionObserver(</span><br><span class="line">  entries =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(entries);</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>回调函数返回IntersectionObserverEntry的对象有以下属性：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="symbol">  time:</span> <span class="number">3893.92</span>,</span><br><span class="line"><span class="symbol">  rootBounds:</span> <span class="class">ClientRect </span>&#123;</span><br><span class="line"><span class="symbol">    bottom:</span> <span class="number">920</span>,</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">1024</span>,</span><br><span class="line"><span class="symbol">    left:</span> <span class="number">0</span>,</span><br><span class="line"><span class="symbol">    right:</span> <span class="number">1024</span>,</span><br><span class="line"><span class="symbol">    top:</span> <span class="number">0</span>,</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">920</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="symbol">  boundingClientRect:</span> <span class="class">ClientRect </span>&#123;</span><br><span class="line">     <span class="comment">// ...</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="symbol">  intersectionRect:</span> <span class="class">ClientRect </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="symbol">  intersectionRatio:</span> <span class="number">0.54</span>,</span><br><span class="line"><span class="symbol">  target:</span> element</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">time：可见性发生变化的时间，是一个高精度时间戳，单位为毫秒</span><br><span class="line"><span class="keyword">target</span>：被观察的目标元素，是一个 DOM 节点对象</span><br><span class="line">rootBounds：根元素的矩形区域的信息，getBoundingClientRect()方法的返回值，如果没有根元素（即直接相对于视口滚动），则返回<span class="keyword">null</span></span><br><span class="line">boundingClientRect：目标元素的矩形区域的信息</span><br><span class="line">intersectionRect：目标元素与视口（或根元素）的交叉区域的信息</span><br><span class="line">intersectionRatio：目标元素的可见比例，即intersectionRect占boundingClientRect的比例，完全可见时为<span class="number">1</span>，完全不可见时小于等于<span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> IntersectionObserver(<span class="function"><span class="keyword">function</span>(<span class="params">entries</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!(entries[<span class="number">0</span>].intersectionRatio &lt;= <span class="number">0</span>)) &#123;</span><br><span class="line">        loadData()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).observe(<span class="built_in">document</span>.querySelector(<span class="string">"targetDOM"</span>)),</span><br></pre></td></tr></table></figure><h5 id="Option-参数"><a href="#Option-参数" class="headerlink" title="Option 参数"></a>Option 参数</h5><p>1 threshold 属性<br>threshold属性决定了什么时候触发回调函数。对应的值是一个数组，默认是[0]<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> IntersectionObserver(</span><br><span class="line">  entries =&gt; &#123;<span class="comment">/* ... */</span>&#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    threshold: [<span class="number">0</span>, <span class="number">0.25</span>, <span class="number">0.5</span>, <span class="number">0.75</span>, <span class="number">1</span>]  <span class="comment">//当目标元素 0%、25%、50%、75%、100% 可见时，会触发回调函数。</span></span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>2 root 属性，rootMargin 属性<br>很多时候，目标元素不仅会随着窗口滚动，还会在容器里面滚动（比如在iframe窗口里滚动）。<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> opts = &#123;</span><br><span class="line">  root: <span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">'.container'</span>),</span><br><span class="line">  rootMargin: <span class="string">"500px 0px"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> observer = <span class="keyword">new</span> IntersectionObserver(</span><br><span class="line">  callback,</span><br><span class="line">  opts</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>上面代码中，除了root属性，还有rootMargin属性。后者定义根元素的margin，用来扩展或缩小rootBounds这个矩形的大小，从而影响intersectionRect交叉区域的大小。它使用CSS的定义方法，比如10px 20px 30px 40px，表示 top、right、bottom 和 left 四个方向的值。<br>这样设置以后，不管是窗口滚动或者容器内滚动，只要目标元素可见性变化，都会触发观察器。</p><h5 id="IntersectionObserver-API-是异步触发"><a href="#IntersectionObserver-API-是异步触发" class="headerlink" title="IntersectionObserver API 是异步触发"></a>IntersectionObserver API 是异步触发</h5><p>只有线程空闲下来，才会执行观察器。这意味着，这个观察器的优先级非常低，只在其他任务执行完，浏览器有了空闲才会执行。</p><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><a href="http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html" target="_blank" rel="noopener">IntersectionObserver API 使用教程</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端Web Video视频播放兼容处理</title>
      <link href="/2018/05/25/html5-video-compatible/"/>
      <url>/2018/05/25/html5-video-compatible/</url>
      <content type="html"><![CDATA[<blockquote><p>最近因为项目中用到了视频播放，所以使用了HTML5中的video标签，但是遇到了的各种兼容问题。背景：项目运行在支付宝内的网页，被第三方测试机构测出安卓和IOS中视觉不一样。<br><a id="more"></a></p></blockquote><h5 id="1-video标签有一个层级问题，永远大于页面其他元素的层级。这样就会导致如果页面有其他内容需要展示在页面上方的时候，比如弹层之类的，这样就会出现以下的情况。"><a href="#1-video标签有一个层级问题，永远大于页面其他元素的层级。这样就会导致如果页面有其他内容需要展示在页面上方的时候，比如弹层之类的，这样就会出现以下的情况。" class="headerlink" title="1. video标签有一个层级问题，永远大于页面其他元素的层级。这样就会导致如果页面有其他内容需要展示在页面上方的时候，比如弹层之类的，这样就会出现以下的情况。"></a>1. video标签有一个层级问题，永远大于页面其他元素的层级。这样就会导致如果页面有其他内容需要展示在页面上方的时候，比如弹层之类的，这样就会出现以下的情况。</h5><p><img src="https://upload-images.jianshu.io/upload_images/10832850-f2a73cfaec9c39fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="视频播放时点开其他的弹层（安卓）"><br>在安卓机型中，如果在视频的播放中的情况点开了其他置于视频上方的元素时，此时视频会挡住点开的元素，不管弹层的层级多高。PS: IOS系统中没有此问题。解决思路大概可如下：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>暂停播放中的视频</span><br><span class="line"><span class="bullet">2. </span>隐藏视频标签</span><br><span class="line"><span class="bullet">3. </span>写一个和视频大小一样的标签占位在原视频标签处，里面可放一张视频的封面图</span><br><span class="line"><span class="bullet">4. </span>显示其他弹出层内容</span><br><span class="line"><span class="bullet">5. </span>关闭弹层时，隐藏占位的封面图，显示视频标签并播放</span><br></pre></td></tr></table></figure></p><h5 id="2-视频在播放的情况下滚动页面，当视频消失在视线中的时候安卓和IOS的视觉效果不一样。IOS中会正常消失，而在安卓系统中会自动置顶在页面顶端。"><a href="#2-视频在播放的情况下滚动页面，当视频消失在视线中的时候安卓和IOS的视觉效果不一样。IOS中会正常消失，而在安卓系统中会自动置顶在页面顶端。" class="headerlink" title="2. 视频在播放的情况下滚动页面，当视频消失在视线中的时候安卓和IOS的视觉效果不一样。IOS中会正常消失，而在安卓系统中会自动置顶在页面顶端。"></a>2. 视频在播放的情况下滚动页面，当视频消失在视线中的时候安卓和IOS的视觉效果不一样。IOS中会正常消失，而在安卓系统中会自动置顶在页面顶端。</h5><p><img src="https://upload-images.jianshu.io/upload_images/10832850-ab95efac52870969.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安卓中视频自动置顶"><br>解决思路：因为此问题是在视频播放的时候才会有这个问题，所有通过获取视频元素距离窗口的高度，当即将离开视线的时候暂停视频。最终还是失败：<br>在安卓中慢速的滑动时是没有问题的，视频暂停，不再置顶，正常的离开视线。但是当很快速的滑动时，还是控制不了它置顶在页面的顶部。下面的代码也考虑用了时间差来判断速度控制暂时，不过还是会先出现置顶，后才会暂停视频。<br>IOS中在自带的浏览器中是没有问题的，但是在<em>支付宝的内置浏览器</em> 中出现了问题，在手指滑动屏幕后，页面自动滚动的过程中，监听不了scroll事件，所以导致高度的计算值一直没有变化，当滚动停止后才更新高度。这样跟预期的想法也差了很远，所以这个方案也被kill。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> touchHight = <span class="number">0</span></span><br><span class="line"><span class="keyword">var</span> dateTime = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">$(<span class="string">'.warper'</span>).on(<span class="string">'scroll'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> v =  $(<span class="string">'#video-active'</span>).offset().top - $(<span class="built_in">window</span>).scrollTop();</span><br><span class="line">  <span class="keyword">var</span> touchHightDiff = touchHight - v</span><br><span class="line">  <span class="keyword">var</span> timeDiff = <span class="keyword">new</span> <span class="built_in">Date</span>() - dateTime</span><br><span class="line">      touchHight = v</span><br><span class="line">      dateTime = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(timeDiff &lt; <span class="number">25</span> &amp;&amp; touchHightDiff &gt; <span class="number">20</span>)&#123;</span><br><span class="line">    $(<span class="string">'#video-active'</span>).trigger(<span class="string">'pause'</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(v&lt;<span class="number">30</span> )&#123;</span><br><span class="line">    $(<span class="string">'#video-active'</span>).trigger(<span class="string">'pause'</span>)</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(v&gt;<span class="number">30</span>)&#123;</span><br><span class="line">    $(<span class="string">'#video-active'</span>).trigger(<span class="string">'play'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h5 id="3-考虑播放视频的时候全屏展示，退出就暂停视频播放。这样就不会有很大的视觉差别了。"><a href="#3-考虑播放视频的时候全屏展示，退出就暂停视频播放。这样就不会有很大的视觉差别了。" class="headerlink" title="3. 考虑播放视频的时候全屏展示，退出就暂停视频播放。这样就不会有很大的视觉差别了。"></a>3. 考虑播放视频的时候全屏展示，退出就暂停视频播放。这样就不会有很大的视觉差别了。</h5><p>这里引用第三方插件video.js,虽然播放的时候全屏显示，但是又有其他问题了。<br>安卓在退出全屏暂停播放后，再次点击播放的时候不会全屏了，正常播放了。这又和预期的效果不一样了，所以每次播放前视频都是隐藏，用图片代替，点击播放的时候再显示视频并全屏播放，暂停时再次隐藏视频，显示代替图片。这个过程中会有一些问题，安卓在退出全屏后并没有如期隐藏；IOS在暂停后再次播放的时候视频没有了画面。经过多次调试在全屏开始前都增加一个延时定时器会解决相关问题。如下，兼容代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 播放视频 视频播放时开启全屏播放</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">videoPlayer</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 视频初始化</span></span><br><span class="line">    <span class="keyword">var</span> myPlayer = videoJs(<span class="string">'#video'</span>,&#123;</span><br><span class="line">        width:<span class="string">'100%'</span>,</span><br><span class="line">        controls:<span class="literal">false</span>,</span><br><span class="line">        autoplay:<span class="literal">false</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 视频模拟点击开始缓存视频</span></span><br><span class="line">    myPlayer.play();</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        myPlayer.pause();</span><br><span class="line">    &#125;,<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 点击替代图片全屏播放视频</span></span><br><span class="line">    $(<span class="string">"#videoPoster .play"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="comment">// 隐藏替代图片 显示视频</span></span><br><span class="line">        $(<span class="string">'#videoPoster'</span>).hide();</span><br><span class="line">        $(<span class="string">'#video'</span>).show()</span><br><span class="line">        <span class="comment">// 全屏播放</span></span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            myPlayer.requestFullscreen();</span><br><span class="line">            myPlayer.play();</span><br><span class="line">        &#125;,<span class="number">300</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 视频退出全屏会自动暂停触发暂停事件</span></span><br><span class="line">    myPlayer.on(<span class="string">"pause"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 显示替代图片 隐藏视频</span></span><br><span class="line">        $(<span class="string">'#videoPoster'</span>).show()</span><br><span class="line">        $(<span class="string">'#video'</span>).hide()</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>就这样，还是可能会更换其他的方案。</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB前端 </tag>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>理想三旬 The road of youth</title>
      <link href="/2018/05/19/The-road-of-youth/"/>
      <url>/2018/05/19/The-road-of-youth/</url>
      <content type="html"><![CDATA[<p>非常喜欢陈叔的理想三旬，今天无意中发现了一个英文版本的The road of youth，这声线好好听。<br><a id="more"></a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=910442393&auto=1&height=66"></iframe><p>词：唐映枫 曲：陈鸿宇<br>翻唱：Leo&amp;Mia<br>雨后有车驶来<br>Raining bus hides in dawn<br>驶过暮色苍白<br>Moving passes the lawn<br>旧铁皮往南开，恋人已不在<br>Old driver sheds tears his lover has gone<br>收听浓烟下的<br>Radio under the smoke<br>诗歌电台<br>Palying our song<br>不动情的咳嗽，至少看起来<br>Whose garment is torn,whose dream around shade<br>归途也还可爱<br>The way home filled with flame<br>琴弦少了姿态<br>The strings losing some blames<br>再不见那夜里，听歌的小孩<br>Listening to trains, the noise with railways<br>时光匆匆独白<br>Time telling story to her<br>将颠沛磨成卡带<br>recovering the suffer<br>已枯卷的情怀，踏碎成年代<br>The lonely night, arouse up dreamers</p><p>就老去吧，孤独别醒来<br>When the day is gone, let the day feel strong<br>你渴望的离开<br>Your hoping to go<br>只是无处停摆<br>Just to siwing alone<br>就歌唱吧，眼睛眯起来<br>When the night is on, let the night left lone<br>而热泪的崩坏<br>Your wishing to grow<br>只是没抵达的存在<br>Just for chasing with the dawn</p><p>青春又醉倒在<br>Youth lie in the bloom<br>籍籍无名的怀<br>No pain and no sorrow gloom<br>靠嬉笑来虚度，聚散得慷慨<br>Wasting time of dreak leaving without mood<br>辗转却去不到<br>Using coins to toss<br>对的站台<br>follow the souls<br>如果漂泊是成长，必经的路牌<br>Drifting in the growth meeting with a blouse<br>你迷醒岁月中<br>Sleep with the naive gown<br>那贫瘠的未来<br>When the future is done<br>像遗憾季节里，未结果的爱<br>Just like the sweat love though within no cores<br>弄脏了每一页诗<br>Mess every single word up<br>吻最疼痛的告白<br>Feel every ache in the lips<br>而风声吹到这，已不需要释怀<br>When the wind blowing here, no time for release<br>就老去吧，孤独别醒来<br>When the day is gone, let the day feel strong<br>你渴望的离开<br>Your hoping to go<br>只是无处停摆<br>Just to siwing alone<br>就歌唱吧，眼睛眯起来<br>When the night is on, let the night left lone<br>而热泪的崩坏<br>Your wishing to grow<br>只是没抵达的存在<br>Just for chasing with the dawn</p><p>就甜蜜地忍耐<br>The wind has felt tired<br>繁星润湿窗台<br>Starry windows in eyes<br>光影跳动着像在，困倦里说爱<br>Light jumping out says love in the hide<br>再无谓的感慨<br>No more space for sign<br>以为明白<br>Till the drine<br>梦倒塌的地方，今已爬满青苔<br>When the sun goes hide, the primes follow mind</p><p>视频地址：<a href="https://v.qq.com/x/page/r0546vyagxd.html" target="_blank" rel="noopener">英文版理想三旬The Road of Youth</a></p>]]></content>
      
      <categories>
          
          <category> 理想三旬 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 民谣 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo博客搭建遇到的相关问题解答</title>
      <link href="/2018/05/13/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%81%87%E5%88%B0%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94/"/>
      <url>/2018/05/13/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%81%87%E5%88%B0%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94/</url>
      <content type="html"><![CDATA[<h4 id="Q-如何使用github的根目录访问Hexo搭建的博客网站"><a href="#Q-如何使用github的根目录访问Hexo搭建的博客网站" class="headerlink" title="Q: 如何使用github的根目录访问Hexo搭建的博客网站?"></a>Q: 如何使用github的根目录访问Hexo搭建的博客网站?</h4><a id="more"></a><h5 id="A"><a href="#A" class="headerlink" title="A:"></a>A:</h5><ol><li><p>建立与你用户名对应的仓库，仓库名如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">your_user_name<span class="selector-class">.github</span><span class="selector-class">.io</span></span><br></pre></td></tr></table></figure></li><li><p>Hexo 根配置文件如下：</p></li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">url:</span> <span class="string">https:</span><span class="comment">//your_user_name.github.io/</span></span><br><span class="line"><span class="string">root:</span> /</span><br></pre></td></tr></table></figure><ol start="3"><li>此时即可通过<a href="https://your_user_name.github.io/" target="_blank" rel="noopener">https://your_user_name.github.io</a>访问，不用携带子路径。</li></ol><hr><h4 id="Q-Hexo-categories，tags，about页面不显示解决办法"><a href="#Q-Hexo-categories，tags，about页面不显示解决办法" class="headerlink" title="Q: Hexo categories，tags，about页面不显示解决办法?"></a>Q: Hexo categories，tags，about页面不显示解决办法?</h4><h5 id="A-1"><a href="#A-1" class="headerlink" title="A:"></a>A:</h5><ol><li>默认初始化的时候是没有categories和tags等页面的，如果需要，执行如下命令新增相关页面：</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span><span class="string">"tags"</span></span><br><span class="line"></span><br><span class="line">hexo new<span class="built_in"> page </span><span class="string">"categories"</span></span><br><span class="line"></span><br><span class="line">hexo new<span class="built_in"> page </span><span class="string">"about"</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>编辑 /tags/index.md  /categories/index.md  /about/index.md</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tags</span></span><br><span class="line"><span class="symbol">type:</span> tags</span><br><span class="line"><span class="symbol">layout:</span> tags</span><br><span class="line"></span><br><span class="line"><span class="comment">// categories</span></span><br><span class="line"><span class="symbol">type:</span> categories</span><br><span class="line"><span class="symbol">layout:</span> categories</span><br><span class="line"></span><br><span class="line"><span class="comment">// about</span></span><br><span class="line"><span class="symbol">title:</span> about</span><br><span class="line"><span class="symbol">layout:</span> about</span><br></pre></td></tr></table></figure></li><li><p>有一点要注意的是，上面layout对应的值要与实际你用的主题中的layout的名称要对上，不然会造成页面加载不出来</p></li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// categories 我的主题categories页实际的layout名是category.ejs</span></span><br><span class="line"><span class="symbol">title:</span> categories</span><br><span class="line"><span class="symbol">layout:</span> category</span><br></pre></td></tr></table></figure><hr><h4 id="Q-Hexo-categories，tags有中文的情况下会导致url访问路径也会带上中文，怎么设置别名"><a href="#Q-Hexo-categories，tags有中文的情况下会导致url访问路径也会带上中文，怎么设置别名" class="headerlink" title="Q: Hexo categories，tags有中文的情况下会导致url访问路径也会带上中文，怎么设置别名?"></a>Q: Hexo categories，tags有中文的情况下会导致url访问路径也会带上中文，怎么设置别名?</h4><p>比如分类我们设置的是：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">categories:</span> 前端</span><br></pre></td></tr></table></figure><p>那么在生成页面后，分类列表就会出现前端这个选项，它的访问路径是：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/categories/</span>前端</span><br></pre></td></tr></table></figure><h5 id="A-2"><a href="#A-2" class="headerlink" title="A:"></a>A:</h5><ol><li><p>打开根目录下的配置文件 _config.yml ，找到如下位置做更改：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">default_category</span>: uncategorized</span><br><span class="line"></span><br><span class="line"><span class="attribute">category_map:</span></span><br><span class="line">    前端: fontend</span><br><span class="line"><span class="attribute">tag_map:</span></span><br><span class="line">    测试: test</span><br></pre></td></tr></table></figure></li><li><p>此时的访问路径将是：</p></li></ol><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/categories/fontend/</span></span><br><span class="line"><span class="regexp">/tags/test/</span></span><br></pre></td></tr></table></figure><hr><h4 id="Q-Hexo主题中如何实现多级分类？"><a href="#Q-Hexo主题中如何实现多级分类？" class="headerlink" title="Q: Hexo主题中如何实现多级分类？"></a>Q: Hexo主题中如何实现多级分类？</h4><h5 id="A-3"><a href="#A-3" class="headerlink" title="A:"></a>A:</h5><ol><li>在主题文件夹中找到 layout/category.ejs 文件，修改成如下所示：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (site.categories.length)&#123; %&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"widget tag"</span>&gt;</span><br><span class="line">  &lt;h3 <span class="class"><span class="keyword">class</span></span>=<span class="string">"title"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">categories</span>') %&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">     &lt;%- list_categories(site.categories) %&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>如果不显示多级分类了，只需设置list_categories函数的参数即可<br>list_categories(site.categories,{depth: 1}) 这样就只会显示一级分类了。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm 同时执行多条监听命令</title>
      <link href="/2018/04/20/npm-mult-cmds/"/>
      <url>/2018/04/20/npm-mult-cmds/</url>
      <content type="html"><![CDATA[<p>在全栈开发中，难免会遇到同时需启动多个服务，按照常规的方式需要开启多个窗口，这样难免有些麻烦。<br>下面介绍一种只需要一条npm执行多条命令，即可开启多个服务：<br><a id="more"></a></p><h4 id="1-安装-concurrently"><a href="#1-安装-concurrently" class="headerlink" title="1.安装 concurrently:"></a>1.安装 concurrently:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g concurrently</span><br></pre></td></tr></table></figure><h4 id="2-更改package-json的-scripts"><a href="#2-更改package-json的-scripts" class="headerlink" title="2.更改package.json的 scripts:"></a>2.更改package.json的 scripts:</h4><p> 方便同时启动多个服务，此时后端的代码是在前端代码中的一个目录，这样方便操作。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "client": "webpack-dev-server --inline --progress --config build/webpack.dev.conf.js",</span><br><span class="line">    "server" : "node node/bin/www",</span><br><span class="line">    "start": "concurrent \"npm run client\" \"npm run server\""</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><h4 id="3-启动"><a href="#3-启动" class="headerlink" title="3.启动:"></a>3.启动:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run start</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/10832850-a5973af4f54c7b10.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信截图_20180420105210.png"></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端弹出遮罩层后 禁止页面滚动</title>
      <link href="/2018/03/10/forbid-scrolling/"/>
      <url>/2018/03/10/forbid-scrolling/</url>
      <content type="html"><![CDATA[<p>在开发移动web的时候，相信大家都会遇到当有 fixed定位遮罩层弹出时，在屏幕上滑动能够滑动背景下面的内容，这在大部分场景下都不是和友好的，解决方法如下：<br><a id="more"></a></p><h4 id="1-CSS-overflow-hidden"><a href="#1-CSS-overflow-hidden" class="headerlink" title="1.  CSS overflow:hidden"></a>1.  CSS overflow:hidden</h4><p>一般这种情况如果需要阻止滚动嘴简单的方法就是弹层弹出后，给body设置样式 overflow:hidden;在弹层隐藏的同时去掉加上的css, 不过这种并不适用与body的高度刚好是页面的高度，实际下层穿透滚动的元素是在body中的其他元素。 不能完全禁止，还是会有元素可以滚动。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">overflow</span>:hidden</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="2-JS-preventDefault"><a href="#2-JS-preventDefault" class="headerlink" title="2. JS preventDefault"></a>2. JS preventDefault</h4><p>监听touchmove事件并阻止默认事件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'mask'</span>).addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">       event.preventDefault();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB前端 </tag>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS web html5 移动端 软键盘弹起遮挡输入框 输入框定位不准确</title>
      <link href="/2017/12/14/ios-web-input/"/>
      <url>/2017/12/14/ios-web-input/</url>
      <content type="html"><![CDATA[<p>移动web当有输入框fixed定位在底部的时候，点击输入，弹起软键盘，iOS在将页面推上的时候会回弹一下，导致键盘刚好遮挡到输入框。而且在页面不同高度弹起的键盘对输入框的位置还不一样。（所受影响的元素此时是fixed定位）。<br><a id="more"></a></p><h4 id="1-当换起键盘的时候把输入框的fixed定位改为relative定位到页面的底部，当输入完成离开输入框的时候，再把输入框的定位改为fixed。这样不会引起输入框的位置不可控。处理较为简单。"><a href="#1-当换起键盘的时候把输入框的fixed定位改为relative定位到页面的底部，当输入完成离开输入框的时候，再把输入框的定位改为fixed。这样不会引起输入框的位置不可控。处理较为简单。" class="headerlink" title="1. 当换起键盘的时候把输入框的fixed定位改为relative定位到页面的底部，当输入完成离开输入框的时候，再把输入框的定位改为fixed。这样不会引起输入框的位置不可控。处理较为简单。"></a>1. 当换起键盘的时候把输入框的fixed定位改为relative定位到页面的底部，当输入完成离开输入框的时候，再把输入框的定位改为fixed。这样不会引起输入框的位置不可控。处理较为简单。</h4><p><img src="https://upload-images.jianshu.io/upload_images/10832850-48491caaef3d5b3f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="触发留言之前的界面.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/10832850-a26f05498f52e1e5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="换起输入框之后的界面.jpg"><br>代码如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isiOS)&#123;</span><br><span class="line">    $(<span class="built_in">document</span>).on(<span class="string">"focusin"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// $('.postMsgBg') 输入框</span></span><br><span class="line">        $(<span class="string">'.postMsgBg'</span>).css(<span class="string">'position'</span>,<span class="string">'relative'</span>)</span><br><span class="line">        <span class="keyword">var</span> clientHeight= <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $(<span class="built_in">window</span>).scrollTop(clientHeight);</span><br><span class="line">        &#125;,<span class="number">300</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="built_in">document</span>).on(<span class="string">'focusout'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">         $(<span class="string">'.postMsgBg'</span>).css(<span class="string">'position'</span>,<span class="string">'fixed'</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>以上的方法是可以解决弹起键盘后输入框乱跳的问题，但是每次都会跳到屏幕的最下方，这样会比较突兀，相对体验不是很友好。</p><h4 id="2-在body下面新建一个具有absolute属性的元素，将页面所有的模块放在此元素中。在此元素的同级新建一个定位为fixed的元素（输入框）。这样每次弹起也不会造成输入框乱跳，并且每次弹起的位置是在点击的位置。"><a href="#2-在body下面新建一个具有absolute属性的元素，将页面所有的模块放在此元素中。在此元素的同级新建一个定位为fixed的元素（输入框）。这样每次弹起也不会造成输入框乱跳，并且每次弹起的位置是在点击的位置。" class="headerlink" title="2. 在body下面新建一个具有absolute属性的元素，将页面所有的模块放在此元素中。在此元素的同级新建一个定位为fixed的元素（输入框）。这样每次弹起也不会造成输入框乱跳，并且每次弹起的位置是在点击的位置。"></a>2. 在body下面新建一个具有absolute属性的元素，将页面所有的模块放在此元素中。在此元素的同级新建一个定位为fixed的元素（输入框）。这样每次弹起也不会造成输入框乱跳，并且每次弹起的位置是在点击的位置。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'warper'</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'content'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fix-bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.warper</span>&#123;</span></span><br><span class="line"><span class="undefined">          position: absolute;</span></span><br><span class="line"><span class="undefined">          width: 100%;</span></span><br><span class="line"><span class="undefined">          left: 0;</span></span><br><span class="line"><span class="undefined">          right: 0;</span></span><br><span class="line"><span class="undefined">          top: 0;</span></span><br><span class="line"><span class="undefined">          bottom: 0;</span></span><br><span class="line"><span class="undefined">          overflow-y: scroll;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">-webkit-overflow-scrolling</span>: <span class="selector-tag">touch</span>;<span class="comment">/* 解决ios滑动不流畅问题 */</span></span></span><br><span class="line"><span class="undefined">     &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.fix-bottom</span>&#123;</span></span><br><span class="line"><span class="css">         <span class="selector-tag">position</span><span class="selector-pseudo">:fixed</span>;</span></span><br><span class="line"><span class="css">         <span class="selector-tag">bottom</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="undefined">         width: 100%;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB前端 </tag>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
